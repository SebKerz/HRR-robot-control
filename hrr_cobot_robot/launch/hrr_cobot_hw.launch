<?xml version="1.0"?>
<launch>

  <!--arguments to be set from terminal / launch files -->
  <arg name="ns"            default="/"           doc="namespace for current robot."/>
  <arg name="robot_prefix"  default="hrr_cobot."  doc="prefix for URDF joint / link names"/>
  <arg name="use_cobot"     default="false"       doc="flag to use Racer 5 cobot instead of Racer 5 0.80"/>
  <arg name="use_rviz"      default="false"       doc="flag to start rviz"/>
  <arg name="use_skill_server" default="true"       doc="flag to start skill-server"/>
  <arg name="use_watchdog"  default="false"       doc="use safety watchdog"/>
  <arg name="tum_lab"       default="false"       doc="TUM-lab configuration"/>

  <arg name="xyz_tcp"       default="0 0 0.235"   doc="translation from ee-link to tool center point"/>
  <arg name="tool_name"     default="nothing"     doc="launch pipeline with specific tool. Available options are 'wsg_50`, 'wsg_50_dsa`, `vacuum`, `shaftgrinder`, `screwdriver`, `nothing`"/>
  <arg name="robot_name"    default="hrr_cobot"   doc="Robot name" />


  <arg name="debug"  default="false" doc="Enable debug output for major packages of interest"/>

  <!--variables -->
  <env if="$(arg debug)" name="ROSCONSOLE_CONFIG_FILE"  value="$(find hrr_cobot_robot)/config/ros_debug.conf"/>
  <env unless="$(arg debug)" name="ROSCONSOLE_CONFIG_FILE"  value="$(find hrr_cobot_robot)/config/ros_out.conf"/>

  <arg name="cobot_ns" value="$(arg ns)$(arg robot_name)"/>
  <param name="cobot_ns" value="$(arg ns)$(arg robot_name)"/>
  <arg name="joint_topic_names" value="[$(arg cobot_ns)/joint_states,$(arg cobot_ns)/gripper/joint_states]"/>
  <group ns="$(arg ns)">
    <group ns="$(arg robot_name)">
      <include file="$(find hrr_common)/launch/hrr_cobot.launch">
        <arg name="robot_name"   value="$(arg robot_name)"/>
        <arg name="robot_prefix" value="$(arg robot_prefix)"/>
        <arg name="use_cobot"    value="$(arg use_cobot)"/>
        <arg name="xyz_tcp"      value="$(arg xyz_tcp)"/>
        <arg name="tool_name"    value="$(arg tool_name)"/>
        <arg name="tum_lab"      value="$(arg tum_lab)"/>
        <arg name="use_hw"       value="true"/>
      </include>
      <!-- load FT-sensor calibration or skill-server handle -->
      <node if="$(arg use_skill_server)" name="skill_server" pkg="hrr_cobot_robot" type="skill_server" output="screen" respawn="false"/>

      <!-- complete joint state publisher -->
      <node name="full_joint_state_publisher" pkg="hrr_common" type="joint_state_publisher" output="screen" respawn="true">
        <param name="robot_description" value="$(arg cobot_ns)/robot_description"/>
        <rosparam param="source_list" subst_value="True">$(arg joint_topic_names)</rosparam>
      </node>

      <!-- load urdf updater server -->
      <node name="urdf_tool_changer" pkg="hrr_cobot_robot" type="urdf_updater_server" output="screen"/>

      <!-- gripper watchdog / starter-->
      <node name="gripper_watchdog" pkg="hrr_cobot_robot" type="gripper_watchdog" output="screen"/>
    </group>

    <!-- load cobot -->
    <include file="$(find hrr_cobot_robot)/launch/hrr_cobot_control.launch">
        <arg name="ns" value="$(arg ns)"/>
        <arg name="robot_name" value="$(arg robot_name)"/>
        <arg name="robot_prefix" value="$(arg robot_prefix)"/>
        <arg name="tum_lab" value="$(arg tum_lab)"/>
    </include>
  </group>

  <include if="$(arg use_rviz)" file="$(find hrr_common)/launch/rviz.launch">
    <arg name="rviz_file" value="$(find hrr_common)/rviz/hrr_cobot_hw.rviz"/>
  </include>
</launch>

